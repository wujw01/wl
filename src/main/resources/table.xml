<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="table.xsl"?>

<application debug="false">

    <!-- SYBASE -->
    <!--
    <driver name="com.sybase.jdbc2.jdbc.SybDriver" />
    <connection name="auth0" poolsize="8" url="jdbc:sybase:Tds:dbserver:4100/passport" username="username" password="password"/>
    -->

    <!-- MYSQL -->
    <driver name="com.mysql.jdbc.Driver"/>
    <connection name="auth0" poolsize="3"
                url="jdbc:mysql://47.100.232.20:3306/wl?useUnicode=true&amp;characterEncoding=utf8" username="root"
                password="Root<mctcore"/>

    <!-- MSSQL -->
    <!--
    <driver name="com.microsoft.jdbc.sqlserver.SQLServerDriver" />
    <connection name="auth0" poolsize="8" url="jdbc:microsoft:sqlserver://192.168.200.1:1433;databasename=zx1235" username="sa" password="zx1235"/>
    -->

    <!-- 帐号表
         id:          ID
         name:        帐号名，英文字母和数字组成
         passwd:      密码，MD5
         prompt:      提示问题
         answer:      提示问题答案
         truename:    真实姓名
         idnumber:    证件号码
         email:       电子邮件
         mobilenumber:移动电话
         province:    省份
         city:        城市
         phonenumber: 电话
         address:     地址
         postalcode:  邮编
         gender:      性别
         birthday:    出生日期
         creatime:    创建时间
         qq:          QQ号码
         passwd2:     二级密码
    -->
    <table name="users" connection="auth0" operate="replaceA">
        <column name="id" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="name" sql-type="varchar(32)" java-type="java.lang.String" not-null="true"/>
        <column name="passwd" sql-type="binary(16)" java-type="java.lang.reflect.Array" not-null="true"/>
        <column name="prompt" sql-type="varchar(32)" java-type="java.lang.String" not-null="true"/>
        <column name="answer" sql-type="varchar(32)" java-type="java.lang.String" not-null="true"/>
        <column name="truename" sql-type="varchar(32)" java-type="java.lang.String" not-null="true"/>
        <column name="idnumber" sql-type="varchar(32)" java-type="java.lang.String" not-null="true"/>
        <column name="email" sql-type="varchar(64)" java-type="java.lang.String" not-null="true"/>
        <column name="mobilenumber" sql-type="varchar(32)" java-type="java.lang.String" not-null="false"/>
        <column name="province" sql-type="varchar(32)" java-type="java.lang.String" not-null="false"/>
        <column name="city" sql-type="varchar(32)" java-type="java.lang.String" not-null="false"/>
        <column name="phonenumber" sql-type="varchar(32)" java-type="java.lang.String" not-null="false"/>
        <column name="address" sql-type="varchar(64)" java-type="java.lang.String" not-null="false"/>
        <column name="postalcode" sql-type="varchar(8)" java-type="java.lang.String" not-null="false"/>
        <column name="gender" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>
        <column name="birthday" sql-type="datetime" java-type="java.util.Date" not-null="false"/>
        <column name="creatime" sql-type="datetime" java-type="java.util.Date" not-null="true"/>
        <column name="qq" sql-type="varchar(32)" java-type="java.lang.String" not-null="false"/>
        <column name="passwd2" sql-type="binary(16)" java-type="java.lang.reflect.Array" not-null="false"/>

        <primarykey name="pk_id" column="id"/>
        <index name="ind_name" unique="true" column="name"/>
        <index name="ind_creatime" column="creatime"/>
    </table>

    <table name="account" connection="auth0" operate="replaceA">
        <column name="id" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="name" sql-type="varchar(32)" java-type="java.lang.String" not-null="true"/>
        <column name="passwd" sql-type="binary(16)" java-type="java.lang.reflect.Array" not-null="true"/>
        <column name="creatime" sql-type="datetime" java-type="java.util.Date" not-null="true"/>
        <column name="usertype" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>

        <primarykey name="pk_id" column="id"/>
        <index name="ind_name" unique="true" column="name"/>
        <index name="ind_creatime" column="creatime"/>
    </table>


    <!-- IP限制表
        uid:          用户ID
        ipaddr1:      IP地址1
        ipmask1:      掩码1
        ipaddr2:      IP地址2
        ipmask2:      掩码2
        ipaddr3:      IP地址3
        ipmask3:      掩码3
        enablue:      是否启用IP限制('t' or 'f')
        lockstatus:   是否锁定帐号,禁止登陆('t' or 'f')
    -->
    <table name="iplimit" connection="auth0" operate="replaceA">
        <column name="uid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="ipaddr1" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>
        <column name="ipmask1" sql-type="varchar(2)" java-type="java.lang.String" not-null="false"/>
        <column name="ipaddr2" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>
        <column name="ipmask2" sql-type="varchar(2)" java-type="java.lang.String" not-null="false"/>
        <column name="ipaddr3" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>
        <column name="ipmask3" sql-type="varchar(2)" java-type="java.lang.String" not-null="false"/>
        <column name="enable" sql-type="char(1)" java-type="java.lang.String" not-null="false"/>
        <column name="lockstatus" sql-type="char(1)" java-type="java.lang.String" not-null="false"/>

        <primarykey name="pk_iplimit" column="uid"/>
    </table>

    <!-- 权限表 每条记录表示userid在区号为zoneid的服务器拥有rid对应的权限。
        userid:       用户ID
        zoneid:       服务器号
        rid:          权限号
    -->
    <table name="auth" connection="auth0" operate="replaceA">
        <column name="userid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="zoneid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="rid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <primarykey name="pk_id" column="userid, zoneid, rid"/>
    </table>

    <!-- 封禁记录表
         userid:      被封禁用户ID
         type:        封禁类型
         ctime:       封禁创建时间
         forbid_time: 封禁时间（秒）
         reason:      封禁原因
         gmroleid:    封禁者
    -->
    <table name="forbid" connection="auth0" operate="replaceA">
        <column name="userid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="type" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="ctime" sql-type="datetime" java-type="java.util.Date" not-null="true"/>
        <column name="forbid_time" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="reason" sql-type="varbinary(255)" java-type="java.lang.reflect.Array" not-null="true"/>
        <column name="gmroleid" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>

        <primarykey name="pk_id" column="userid,type"/>
    </table>

    <!-- 帐号计费区信息表
         uid:         user ID
         aid:         计费区ID
         time:        帐号在该计费区内拥有的可玩时间,单位:秒
         zoneid:      帐号当前在线的服务器ID
         zonelocalid: 帐号当前在线的服务器session
         accountstart:计费开始时间,保留未用
         lastlogin:   帐号最后一次登陆时间
         enddate:     包月截止时间,保留未用
    -->
    <table name="point" connection="auth0" operate="replaceA">
        <column name="uid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="aid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="time" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="zoneid" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>
        <column name="zonelocalid" sql-type="integer" java-type="java.lang.Integer" not-null="false"/>
        <column name="accountstart" sql-type="datetime" java-type="java.util.Date" not-null="false"/>
        <column name="lastlogin" sql-type="datetime" java-type="java.util.Date" not-null="false"/>
        <column name="enddate" sql-type="datetime" java-type="java.util.Date" not-null="false"/>

        <primarykey name="pk_id" column="uid, aid"/>
        <index name="ind_aid" column="aid,zoneid"/>
    </table>

    <!-- 金元宝划拨队列表
         userid:      user ID
         zoneid:      服务器ID
         sn:          序列号
         aid:         计费区ID
         point:       划拨的游戏时间,单位:秒
         cash:        划拨的金元宝个数,单位:秒
         status:      当前状态
         creatime:    创建时间
    -->
    <table name="usecashnow" connection="auth0" operate="replaceA">
        <column name="userid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="zoneid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="sn" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="aid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="point" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="cash" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <!--status 1.create; 2.get sn; 3.send addcash; 4.finish; -->
        <column name="status" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="creatime" sql-type="datetime" java-type="java.util.Date" not-null="true"/>

        <primarykey name="pk_usecashnow" column="userid, zoneid, sn"/>
        <index name="ind_usecashnow_status" column="status"/>
        <index name="ind_usecashnow_creatime" column="creatime"/>
    </table>

    <!-- 金元宝划拨日志表
         userid:      user ID
         zoneid:      服务器ID
         sn:          序列号
         aid:         计费区ID
         point:       划拨的游戏时间,单位:秒
         cash:        划拨的金元宝个数,单位:秒
         status:      当前状态
         creatime:    创建时间
         fintime:     结束时间
    -->
    <table name="usecashlog" connection="auth0" operate="replaceA">
        <column name="userid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="zoneid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="sn" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="aid" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="point" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="cash" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="status" sql-type="integer" java-type="java.lang.Integer" not-null="true"/>
        <column name="creatime" sql-type="datetime" java-type="java.util.Date" not-null="true"/>
        <column name="fintime" sql-type="datetime" java-type="java.util.Date" not-null="true"/>

        <index name="ind_usecashlog_uzs" column="userid, zoneid, sn"/>
        <index name="ind_usecashlog_creatime" column="creatime"/>
    </table>

    <!-- 查询：根据用户名查询ID. -->
    <query name="getUserid">
        <table name="users" alias="u"/>
        <column name="id" column="u.id"/>
        <select name="byName" condition="WHERE u.name = ?"/>
    </query>

    <!-- 查询：根据用户名查询. -->
    <query name="getUserInfo">
        <table name="users" alias="u"/>
        <column name="id" column="u.id"/>
        <column name="prompt" column="u.prompt"/>
        <column name="answer" column="u.answer"/>
        <column name="truename" column="u.truename"/>
        <column name="idnumber" column="u.idnumber"/>
        <column name="email" column="u.email"/>
        <column name="mobilenumber" column="u.mobilenumber"/>
        <column name="province" column="u.province"/>
        <column name="city" column="u.city"/>
        <column name="phonenumber" column="u.phonenumber"/>
        <column name="address" column="u.address"/>
        <column name="postalcode" column="u.postalcode"/>
        <column name="gender" column="u.gender"/>
        <column name="birthday" column="u.birthday"/>
        <column name="creatime" column="u.creatime"/>
        <column name="qq" column="u.qq"/>
        <select name="byName" condition="WHERE u.name = ?"/>
    </query>

    <!-- 查询：根据用户ID查询用户名. -->
    <query name="getUsername">
        <table name="users" alias="u"/>
        <column name="name" column="u.name"/>
        <select name="byId" condition="WHERE u.id = ?"/>
    </query>

    <!-- 查询：根据用户名查询ID和密码. -->
    <query name="acquireIdPasswd">
        <table name="account" alias="u"/>
        <column name="id" column="u.id"/>
        <column name="passwd" column="u.passwd"/>
        <column name="creatime" column="u.creatime"/>
        <select name="byName" condition="WHERE u.name = ?"/>
    </query>

    <!-- 查询：根据用户名查询ID和二级密码. -->
    <query name="acquireIdPasswd2">
        <table name="users" alias="u"/>
        <column name="id" column="u.id"/>
        <column name="passwd2" column="u.passwd2"/>
        <select name="byName" condition="WHERE u.name = ?"/>
    </query>

    <!-- 查询：根据用户ID查询用户创建时间. -->
    <query name="acquireUserCreatime">
        <table name="users" alias="u"/>
        <column name="creatime" column="u.creatime"/>
        <select name="byUid" condition="WHERE u.id = ?"/>
    </query>

    <!-- 查询：根据用户ID查询IP限制信息. -->
    <query name="getIPLimit">
        <table name="iplimit" alias="i"/>
        <column name="uid" column="i.uid"/>
        <column name="ipaddr1" column="i.ipaddr1"/>
        <column name="ipmask1" column="i.ipmask1"/>
        <column name="ipaddr2" column="i.ipaddr2"/>
        <column name="ipmask2" column="i.ipmask2"/>
        <column name="ipaddr3" column="i.ipaddr3"/>
        <column name="ipmask3" column="i.ipmask3"/>
        <column name="enablue" column="i.enable"/>
        <column name="lockstatus" column="i.lockstatus"/>
        <select name="byUid" condition="WHERE i.uid = ?"/>
    </query>

    <!-- 查询：根据用户ID和服务器号查询用户权限. -->
    <query name="acquireUserPrivilege">
        <table name="auth" alias="au"/>
        <column name="rid" column="au.rid"/>
        <select name="byUidZid" condition="WHERE au.userid = ? AND au.zoneid = ?"/>
    </query>

    <!-- 查询：查询用户权限. -->
    <query name="acquirePrivilege">
        <table name="auth" alias="au"/>
        <table name="users" alias="users"/>
        <column name="userid" column="au.userid"/>
        <column name="zoneid" column="au.zoneid"/>
        <column name="rid" column="au.rid"/>
        <column name="name" column="users.name"/>
        <column name="creatime" column="users.creatime"/>
        <select name="byZid" condition="WHERE au.userid = users.id AND au.zoneid = ?"/>
        <select name="byUid" condition="WHERE au.userid = users.id AND au.userid = ?"/>
        <select name="byUidZid" condition="WHERE au.userid = users.id AND au.userid = ? AND au.zoneid = ?"/>
        <select name="byRidZid" condition="WHERE au.userid = users.id AND au.rid = ? AND au.zoneid = ?"/>
        <select name="byAll" condition="WHERE au.userid = users.id"/>
    </query>

    <!-- 查询：根据用户ID或用户名查询封禁信息. -->
    <query name="acquireForbid">
        <table name="forbid" alias="fb"/>
        <column name="userid" column="fb.userid"/>
        <column name="type" column="fb.type"/>
        <column name="ctime" column="fb.ctime"/>
        <column name="forbid_time" column="fb.forbid_time"/>
        <column name="reason" column="fb.reason"/>
        <column name="gmroleid" column="fb.gmroleid"/>
        <select name="byUid" condition="WHERE fb.userid = ? and datediff(ss,fb.ctime,getdate())&lt;=fb.forbid_time"/>
    </query>

    <!-- 查询：根据用户ID查询用户在线服务器. -->
    <query name="getUserOnlineInfo">
        <table name="point" alias="p"/>
        <column name="zoneid" column="p.zoneid"/>
        <column name="localsid" column="p.zonelocalid"/>
        <column name="aid" column="p.aid"/>
        <select name="byUid" condition="WHERE p.uid = ?"/>
    </query>

    <!-- 查询：查询用户每个计费区的时间. -->
    <query name="getUserPoints">
        <table name="point" alias="p"/>
        <column name="aid" column="p.aid"/>
        <column name="time" column="p.time"/>
        <column name="enddate" column="p.enddate"/>
        <select name="byuid" condition="where p.uid=? and NOT p.aid=0"/>
    </query>

    <!-- 查询：查询金元宝划拨列表. -->
    <query name="getusecashnow">
        <table name="usecashnow" alias="u"/>
        <column name="userid" column="u.userid"/>
        <column name="zoneid" column="u.zoneid"/>
        <column name="sn" column="u.sn"/>
        <column name="aid" column="u.aid"/>
        <column name="point" column="u.point"/>

        <column name="cash" column="u.cash"/>
        <column name="status" column="u.status"/>
        <column name="creatime" column="u.creatime"/>

        <select name="bystatus" condition="WHERE status = ? AND creatime &lt; dateadd(second,-200,getdate())"/>
        <select name="byuserzone" condition="WHERE u.userid = ? AND u.zoneid = ?"/>
        <select name="byuserzonesn" condition="WHERE u.userid = ? AND u.zoneid = ? AND u.sn = ?"/>
        <select name="byuser" condition="WHERE u.userid = ?"/>
    </query>

    <!-- 查询：查询金元宝划拨日志. -->
    <query name="getusecashlog">
        <table name="usecashlog" alias="u"/>
        <column name="userid" column="u.userid"/>
        <column name="zoneid" column="u.zoneid"/>
        <column name="sn" column="u.sn"/>
        <column name="aid" column="u.aid"/>
        <column name="point" column="u.point"/>
        <column name="cash" column="u.cash"/>
        <column name="status" column="u.status"/>
        <column name="creatime" column="u.creatime"/>
        <column name="fintime" column="u.fintime"/>

        <select name="byuserzone" condition="WHERE u.userid = ? AND u.zoneid = ?"/>
        <select name="byuserzonesn" condition="WHERE u.userid = ? AND u.zoneid = ? AND u.sn = ?"/>
        <select name="byuser" condition="WHERE u.userid = ?"/>
    </query>

    <!-- 存储过程：获取用户名密码 -->
    <procedure name="acquireuserpasswd" connection="auth0" operate="replaceA">
        <parameter name="name1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="false" out="true"/>
        <parameter name="passwd1" sql-type="char(64)" java-type="java.lang.String" in="false" out="true"/>
        DECLARE passwdtemp BINARY(16) ;
        START TRANSACTION ;
        SELECT id, passwd INTO uid1, passwdtemp FROM users WHERE NAME = name1 ;
        SELECT fn_varbintohexsubstring (1, passwdtemp, 1, 0) INTO passwd1 ;
        COMMIT ;
    </procedure>

    <!-- 存储过程：添加用户 -->
    <procedure name="adduser" connection="auth0" operate="replaceA">
        <parameter name="name1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="passwd1" sql-type="binary(16)" java-type="java.lang.reflect.Array" in="true" out="false"/>
        <parameter name="prompt1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="answer1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="truename1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="idnumber1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="email1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="mobilenumber1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="province1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="city1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="phonenumber1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="address1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="postalcode1" sql-type="varchar(8)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="gender1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="birthday1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="qq1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="passwd21" sql-type="binary(16)" java-type="java.lang.reflect.Array" in="true" out="false"/>
        DECLARE idtemp INTEGER ;
        SELECT IFNULL(MAX(id), 16) + 16 INTO idtemp FROM users ;
        INSERT INTO users (id, NAME, passwd, prompt, answer, truename, idnumber, email, mobilenumber, province, city,
        phonenumber, address, postalcode, gender, birthday, creatime, qq, passwd2)
        VALUES (idtemp, name1, passwd1, prompt1, answer1, truename1, idnumber1, email1, mobilenumber1, province1, city1,
        phonenumber1, address1, postalcode1, gender1, birthday1, NOW(), qq1, passwd21);
    </procedure>

    <!-- 存储过程：修改用户信息 -->
    <procedure name="updateUserInfo" connection="auth0" operate="replaceA">
        <parameter name="name1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="prompt1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="answer1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="truename1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="idnumber1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="email1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="mobilenumber1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="province1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="city1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="phonenumber1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="address1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="postalcode1" sql-type="varchar(8)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="gender1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="birthday1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="qq1" sql-type="varchar(32)" java-type="java.lang.String" in="true" out="false"/>
        START TRANSACTION ;
        UPDATE users SET prompt = prompt1, answer = answer1, truename = truename1, idnumber = idnumber1, email = email1,
        mobilenumber = mobilenumber1, province = province1, city = city1, phonenumber = phonenumber1, address = address1,
        postalcode = postalcode1, gender = gender1, birthday = birthda1, qq = qq1 WHERE NAME = name1 ;
        COMMIT ;
    </procedure>

    <!-- 存储过程：修改用户密码 -->
    <procedure name="changePasswd" connection="auth0" operate="replaceA">
        <parameter name="name1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="passwd1" sql-type="binary(16)" java-type="java.lang.reflect.Array" in="true" out="false"/>
        START TRANSACTION;
        UPDATE users SET passwd = passwd1 WHERE name = name1;
        COMMIT;
    </procedure>

    <!-- 存储过程：修改用户二级密码 -->
    <procedure name="changePasswd2" connection="auth0" operate="replaceA">
        <parameter name="name1" sql-type="varchar(64)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="passwd21" sql-type="binary(16)" java-type="java.lang.reflect.Array" in="true" out="false"/>
        START TRANSACTION;
        UPDATE users SET passwd2 = passwd21 WHERE name = name1;
        COMMIT;
    </procedure>

    <!-- 存储过程：设置用户IP限制 -->
    <procedure name="setiplimit" connection="auth0" operate="replaceA">
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="ipaddr11" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="ipmask11" sql-type="varchar(2)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="ipaddr21" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="ipmask21" sql-type="varchar(2)" java-type="java.lang.String" in="true" out="false"/>
        <parameter name="ipaddr31" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="ipmask31" sql-type="varchar(2)" java-type="java.lang.String" in="true" out="false"/>
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        UPDATE iplimit SET ipaddr1 = ipaddr11, ipmask1 = ipmask11, ipaddr2 = ipaddr21, ipmask2 = ipmask21, ipaddr3 = ipaddr31, ipmask3 = ipmask31 WHERE uid = uid1;
        SET rowcount = ROW_COUNT();
        IF rowcount = 0 THEN
        INSERT INTO iplimit (uid, ipaddr1, ipmask1, ipaddr2, ipmask2, ipaddr3, ipmask3, enable1) VALUES (uid1, ipaddr11, ipmask11, ipaddr21, ipmask21, ipaddr31, ipmask31,'t');
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：启用/禁用IP限制 -->
    <procedure name="enableiplimit" connection="auth0" operate="replaceA">
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="enable1" sql-type="char(1)" java-type="java.lang.String" in="true" out="false"/>
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        UPDATE iplimit SET enable=enable1 WHERE uid=uid1;
        SET rowcount = ROW_COUNT();
        IF rowcount = 0 THEN
        INSERT INTO iplimit (uid,enable) VALUES (uid1,enable1);
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：锁定用户,禁止登陆 -->
    <procedure name="lockuser" connection="auth0" operate="replaceA">
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="lockstatus1" sql-type="char(1)" java-type="java.lang.String" in="true" out="false"/>
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        UPDATE iplimit SET lockstatus=lockstatus1 WHERE uid=uid1;
        SET rowcount = ROW_COUNT();
        IF rowcount = 0 THEN
        INSERT INTO iplimit (uid,lockstatus,enable) VALUES (uid1,lockstatus1,'t');
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：添加用户权限 -->
    <procedure name="addUserPriv" connection="auth0" operate="replaceA">
        <parameter name="userid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="zoneid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="rid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        START TRANSACTION;
        INSERT INTO auth VALUES(userid1, zoneid1, rid1);
        COMMIT;
    </procedure>

    <!-- 存储过程：删除用户权限 -->
    <procedure name="delUserPriv" connection="auth0" operate="replaceA">
        <parameter name="userid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="zoneid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="rid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="deltype1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        START TRANSACTION;
        IF deltype1 = 0 THEN
        DELETE FROM auth WHERE userid = userid1 AND zoneid = zoneid1 AND rid = rid1;
        ELSE
        IF deltype1 = 1 THEN
        DELETE FROM auth WHERE userid = userid1 AND zoneid = zoneid1;
        ELSE
        IF deltype1 = 2 THEN
        DELETE FROM auth WHERE userid = userid1;
        END IF;
        END IF;
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：增加封禁记录 -->
    <procedure name="addForbid" connection="auth0" operate="replaceA">
        <parameter name="userid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="type1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <!--parameter name="ctime" sql-type="datetime"    java-type="java.util.Date" 	in="true" out="false"/-->
        <parameter name="forbid_time1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="reason1" sql-type="varbinary(255)" java-type="java.lang.reflect.Array" in="true" out="false"/>
        <parameter name="gmroleid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        UPDATE forbid SET ctime = now(), forbid_time = forbid_time1, reason = reason1, gmroleid = gmroleid1 WHERE userid = userid1 AND type = type1;
        SET rowcount = ROW_COUNT();
        IF rowcount = 0 THEN
        INSERT INTO forbid VALUES(userid1, type1, now(), forbid_time1, reason1, gmroleid);
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：删除过期封禁记录 -->
    <procedure name="deleteTimeoutForbid" connection="auth0" operate="replaceA">
        <parameter name="userid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        START TRANSACTION;
        DELETE FROM forbid WHERE userid = userid1 AND timestampdiff(second, ctime, now()) > forbid_time;
        COMMIT;
    </procedure>

    <!-- 存储过程：清楚上线记录 -->
    <procedure name="clearonlinerecords" connection="auth0" operate="replaceA">
        <parameter name="zoneid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="aid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        START TRANSACTION;
        UPDATE point SET zoneid = NULL, zonelocalid = NULL WHERE aid = aid1 AND zoneid = zoneid1;
        DELETE FROM online;
        COMMIT;
    </procedure>

    <!-- 存储过程：上线记录 -->
    <procedure name="recordonline" connection="auth0" operate="replaceA">
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="aid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="zoneid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="true"/>
        <parameter name="zonelocalid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="true"/>
        <parameter name="overwrite1" sql-type="integer" java-type="java.lang.Integer" in="true" out="true"/>
        DECLARE tmp_zoneid INTEGER;
        DECLARE tmp_zonelocalid INTEGER;
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        SELECT SQL_CALC_FOUND_ROWS zoneid, zonelocalid INTO tmp_zoneid, tmp_zonelocalid FROM point WHERE uid = uid1 and aid = aid1;
        INSERT INTO online (ID) VALUES (uid1);
        SET rowcount = FOUND_ROWS();
        IF rowcount = 0 THEN
        INSERT INTO point (uid, aid, time, zoneid, zonelocalid, lastlogin) VALUES (uid1, aid1, 0, zoneid1, zonelocalid1, now());
        ELSE IF tmp_zoneid IS NULL OR overwrite1 = 1 THEN
        UPDATE point SET zoneid = zoneid1, zonelocalid = zonelocalid1, lastlogin = now() WHERE uid = uid1 AND aid = aid1;
        END IF;
        END IF;
        IF tmp_zoneid IS NULL THEN
        SET overwrite1 = 1;
        ELSE
        SET zoneid1 = tmp_zoneid;
        SET zonelocalid1 = tmp_zonelocalid;
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：下线记录 -->
    <procedure name="recordoffline" connection="auth0" operate="replaceA">
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="aid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="zoneid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="true"/>
        <parameter name="zonelocalid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="true"/>
        <parameter name="overwrite1" sql-type="integer" java-type="java.lang.Integer" in="true" out="true"/>
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        UPDATE point SET zoneid = NULL, zonelocalid = NULL WHERE uid = uid1 AND aid = aid1 AND zoneid = zoneid1;
        DELETE FROM online WHERE ID = uid1;
        SET rowcount = ROW_COUNT();
        IF overwrite1 = rowcount THEN
        SELECT zoneid, zonelocalid INTO zoneid1, zonelocalid1 FROM point WHERE uid = uid1 AND aid = aid1;
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：用户剩余时间,保留未用 -->
    <procedure name="remaintime" connection="auth0" operate="replaceA">
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="aid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="remain" sql-type="integer" java-type="java.lang.Integer" in="false" out="true"/>
        <parameter name="freetimeleft" sql-type="integer" java-type="java.lang.Integer" in="false" out="true"/>
        DECLARE enddate1 DATETIME;
        DECLARE now1 DATETIME;
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        SET now1 = now();
        IF aid1 = 0 THEN
        SET remain = 86313600;
        SET enddate1 = date_add(now1, INTERVAL '30' DAY);
        ELSE
        SELECT time, IFNULL(enddate, now1) INTO remain, enddate1 FROM point WHERE uid = uid1 AND aid = aid1;
        SET rowcount = ROW_COUNT();
        IF rowcount = 0 THEN
        SET remain = 0;
        INSERT INTO point (uid,aid,time) VALUES (uid1, aid1, remain);
        END IF;
        END IF;
        SET freetimeleft = 0;
        IF enddate1 > now1 THEN
        SET freetimeleft = timestampdiff(second, now1, enddate1);
        END IF;
        COMMIT;
    </procedure>

    <!-- 存储过程：增加用户剩余时间 -->
    <procedure name="adduserpoint" connection="auth0" operate="replaceA">
        <parameter name="uid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="aid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="time1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        UPDATE point SET time = IFNULL(time,0) + time1 WHERE uid1 = uid AND aid1 = aid;
        SET rowcount = ROW_COUNT();
        IF rowcount = 0 THEN
        INSERT INTO point (uid,aid,time) VALUES (uid1,aid1,time1);
        END IF;
        COMMIT;
    </procedure>

    <!--
        存储过程：划拨金元宝

        status:
            1.create ok;
            2.get sn ok;
            3.send addcash ok;
            4.finish ok;
        error:
            0.成功;
            -1:未知错误;
            -2.该帐号不存在;
            -3:连接帐号服务器失败;
            -4:往帐号服务器发送数据失败;
            -5:帐号服务器未返回;
            -6:游戏服务器不存在或者未启动;
            -7:该用户已有金元宝正在划拨，已放入队列;
            -8.计费区余额不足或划拨金额错误，已放入队列;
            -9:调用次序错误，当前状态不为1;
            -10:调用次序错误，当前状态不为2;
            -11:调用次序错误，当前状态不为3;
            -12:调用次序错误，无此记录;
            -13:向游戏服务器发送获取序列号请求失败;
            -14:向游戏服务器发送划拨请求失败;
            -15:向游戏服务器获取序列号超时;
            -16:游戏服务器获取序列号失败;
            -17:游戏服务器划拨失败;
            -18:游戏服务器金元宝余额不足;
    -->
    <procedure name="usecash" connection="auth0" operate="replaceA">
        <parameter name="userid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="zoneid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="sn1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="aid1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="point1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="cash1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="status1" sql-type="integer" java-type="java.lang.Integer" in="true" out="false"/>
        <parameter name="error" sql-type="integer" java-type="java.lang.Integer" in="false" out="true"/>
        DECLARE sn_old INTEGER;
        DECLARE aid_old INTEGER;
        DECLARE point_old INTEGER;
        DECLARE cash_old INTEGER;
        DECLARE status_old INTEGER;
        DECLARE createtime_old DATETIME;
        DECLARE time_old INTEGER;
        DECLARE need_restore INTEGER;
        DECLARE exists1 INTEGER;
        DECLARE rowcount INTEGER;
        START TRANSACTION;
        SET error = 0;
        SET need_restore = 0;
        SELECT SQL_CALC_FOUND_ROWS sn, aid, point, cash, status, creatime INTO sn_old, aid_old, point_old, cash_old, status_old, createtime_old FROM usecashnow WHERE userid = userid1 AND zoneid = zoneid1 AND sn >= 0;
        SET rowcount = FOUND_ROWS();
        IF rowcount = 1 THEN
        SET exists1 = 1;
        ELSE
        SET exists1 = 0;
        END IF;
        IF status1 = 0 THEN
        IF exists1 = 0 THEN
        SELECT aid, point INTO aid1, point1 FROM usecashnow WHERE userid = userid1 AND zoneid = zoneid1 AND sn = sn1;
        SET point1 = IFNULL(point1,0);
        UPDATE point SET time = time-point1 WHERE uid = userid1 AND aid = aid1 AND time >= point1;
        SET rowcount = ROW_COUNT();
        IF rowcount = 1 THEN
        UPDATE usecashnow SET sn = 0, status = 1 WHERE userid = userid1 AND zoneid = zoneid1 AND sn = sn1;
        ELSE
        SET error = -8;
        END IF;
        END IF;
        ELSE
        IF status1 = 1 THEN
        IF exists1 = 0 THEN
        UPDATE point SET time = time-point1 WHERE uid = userid1 AND aid = aid1 AND time >= point1;
        SET rowcount = ROW_COUNT();
        IF rowcount = 1 THEN
        INSERT INTO usecashnow (userid, zoneid, sn, aid, point, cash, status, creatime) VALUES (userid1, zoneid1, sn1, aid1, point1, cash1, status1, now());
        ELSE
        INSERT INTO usecashnow SELECT userid1, zoneid1, IFNULL(min(sn),0)-1, aid1, point1, cash1, 0, now() FROM usecashnow WHERE userid = userid1 AND zoneid = zoneid1 AND 0 >= sn;
        SET error = -8;
        END IF;
        ELSE
        INSERT INTO usecashnow SELECT userid1, zoneid1, IFNULL(min(sn),0)-1, aid1, point1, cash1, 0, now() FROM usecashnow WHERE userid = userid1 AND zoneid = zoneid1 AND 0 >= sn;
        SET error = -7;
        END IF;
        ELSE
        IF status1 = 2 THEN
        IF exists1 = 1 AND status_old = 1 AND sn_old = 0 THEN
        UPDATE usecashnow SET sn = sn1, status = status1 WHERE userid = userid1 AND zoneid = zoneid1 AND sn = sn_old;
        ELSE
        SET error = -9;
        END IF;
        ELSE
        IF status1 = 3 THEN
        IF exists1 = 1 AND status_old = 2 THEN
        UPDATE usecashnow SET status = status1 WHERE userid = userid1 AND zoneid = zoneid1 AND sn = sn_old;
        ELSE
        SET error = -10;
        END IF;
        ELSE
        IF status1 = 4 THEN
        IF exists1 = 1 THEN
        DELETE FROM usecashnow WHERE userid = userid1 AND zoneid = zoneid1 AND sn = sn_old;
        INSERT INTO usecashlog (userid, zoneid, sn, aid, point, cash, status, creatime, fintime) VALUES (userid1, zoneid1, sn_old, aid_old, point_old, cash_old, status1, createtime_old, now());
        END IF;
        IF NOT (exists1 = 1 AND status_old = 3) THEN
        SET error = -11;
        END IF;
        ELSE
        SET error = -12;
        END IF;
        END IF;
        END IF;
        END IF;
        END IF;
        IF need_restore = 1 THEN
        UPDATE point SET time = time+point_old WHERE uid = userid1 AND aid = aid_old;
        DELETE FROM usecashnow WHERE userid = userid1 AND zoneid = zoneid1 AND sn = sn_old;
        INSERT INTO usecashlog (userid, zoneid, sn, aid, point, cash, status, creatime, fintime) VALUES (userid1, zoneid1, sn_old, aid_old, point_old, cash_old, status1, createtime_old, now());
        END IF;
        COMMIT;
    </procedure>

</application>
